import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:google_sign_in/google_sign_in.dart';
import 'package:moneymate/pages/home.dart';

// ignore: must_be_immutable
class LoginPage extends StatelessWidget {
  LoginPage({super.key});

  final FirebaseAuth _auth = FirebaseAuth.instance;

  final TextEditingController _emailController = TextEditingController();
  final TextEditingController _passwordController = TextEditingController();

  void dispose() {
    _emailController.dispose();
    _passwordController.dispose();
  }

  void _login(context) async {
    try {
      UserCredential userCredential = await _auth.signInWithEmailAndPassword(
          email: _emailController.text, password: _passwordController.text);
      if (userCredential.user != null) {
        if (userCredential.user!.emailVerified) {
          print(
              "user logged in ${userCredential.user!.uid}"); //navigate only email is varified

          Navigator.pushReplacement(
            context,
            MaterialPageRoute(builder: (context) => Home()),
          );
        } else {
          print("User's email is not verified.");
          // Display a message to the user or handle as needed.
          ScaffoldMessenger.of(context).showSnackBar(
            SnackBar(
                content: Text(
                    "Your email is not verified. Please verify your email before logging in.")),
          );
        }
      } else {
        print("Login failed.");
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text("Login failed. Check your Detials")),
        );
      }
    } catch (e) {
      // Handle login errors
      print("Login error: $e");
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text("Login failed. Add valid Detials.")),
      );
    }
  }

  final FirebaseAuth auth = FirebaseAuth.instance;
  final GoogleSignIn _googleSignIn = GoogleSignIn();

  void signInWithGoogle(context) async {
    try {
      await _auth.signOut();
      await _googleSignIn.signOut();

      final GoogleSignInAccount? googleuser = await _googleSignIn.signIn();
      if (googleuser == null) {
        print("google sign canceled by user");
        return;
      }

      final GoogleSignInAuthentication googleAuth =
          await googleuser.authentication;
      final AuthCredential credential = GoogleAuthProvider.credential(
        accessToken: googleAuth.accessToken,
        idToken: googleAuth.idToken,
      );

      final UserCredential userCredential =
          await _auth.signInWithCredential(credential);

      final User? user = userCredential.user;
      final AdditionalUserInfo? additionalUserInfo =
          userCredential.additionalUserInfo;

      print('sigin with google:');
      print('user ID: ${user?.uid}');
      print('Email: ${user?.email}');
      print('display name: ${user?.displayName}');
      print('provider ID: ${additionalUserInfo?.providerId}');

      Navigator.pushReplacement(
          context,
          MaterialPageRoute(
            builder: (context) => Home(),
          ));
    } catch (error) {
      print('Sign in with Google failed: $error');
      // Handle the error
    }
  }

  @override
  Widget build(BuildContext context) {
    const _colrtxt = Colors.purple;

    return Container(
        child: SafeArea(
            child: Scaffold(
      body: Container(
        padding: const EdgeInsets.all(20),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            const Text(
              'Money Mate',
              style: TextStyle(
                  color: _colrtxt, fontSize: 20, fontWeight: FontWeight.w600),
            ),
            TextField(
              controller: _emailController,
              decoration: const InputDecoration(
                  label: Text('Email'), border: OutlineInputBorder()),
            ),
            SizedBox(
              height: 10,
            ),
            TextField(
              controller: _passwordController,
              decoration: InputDecoration(
                  label: Text('Password'), border: OutlineInputBorder()),
            ),
            SizedBox(
              height: 10,
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                TextButton(onPressed: () {}, child: Text('Registor')),
                SizedBox(
                  width: 236,
                ),
                TextButton(onPressed: () {}, child: Text('Forgott Passwoard'))
              ],
            ),
            SizedBox(
                width: double.maxFinite,
                child: ElevatedButton(
                    style: ButtonStyle(elevation: MaterialStatePropertyAll(0)),
                    onPressed: () {
                      _login(context);
                    },
                    child: Text('Sign In'))),
            SizedBox(
              height: 10,
            ),
            Row(
              children: [
                Padding(padding: EdgeInsets.all(8)),
                SizedBox(width: 212, child: Divider()),
                Text('or'),
                SizedBox(width: 212, child: Divider())
              ],
            ),
            SizedBox(
              height: 10,
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              crossAxisAlignment: CrossAxisAlignment.center,
              children: [
                ElevatedButton(
                    style: ButtonStyle(
                        backgroundColor:
                            MaterialStatePropertyAll(Colors.black)),
                    onPressed: () {},
                    child: Text(
                      'Sigin with Google',
                      style: TextStyle(color: Colors.white),
                    )),
                SizedBox(
                  width: 10,
                ),
                ElevatedButton(
                    style: ButtonStyle(
                        backgroundColor:
                            MaterialStatePropertyAll(Colors.blue[900])),
                    onPressed: () {},
                    child: Text(
                      'Sigin with facebook',
                      style: TextStyle(color: Colors.white),
                    ))
              ],
            )
          ],
        ),
      ),
    )));
  }
}
